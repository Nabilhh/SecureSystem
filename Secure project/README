# SecureSystem

SecureSystem is a comprehensive security toolkit designed to enhance the security of your systems through threat detection, encryption, access control, and vulnerability scanning. This project includes various components to address different aspects of system security, providing a unified solution for protecting your infrastructure.

## Features

- **Intrusion Detection System (IDS):** Monitors network traffic for suspicious activities using Snort.
- **Behavioral Analysis:** Detects anomalies in system behavior using an Isolation Forest model.
- **Alert System:** Sends email notifications for detected threats and anomalies.
- **Data Encryption:** Secures sensitive data using AES-256 encryption.
- **Communication Encryption:** Secures data transmission using SSL.
- **Role-Based Access Control (RBAC):** Manages user roles and permissions using Flask-Principal.
- **Multi-Factor Authentication (MFA):** Adds an extra layer of security with one-time passwords.
- **Audit Logs:** Tracks access and modification of sensitive data.
- **Vulnerability Scanning:** Identifies system vulnerabilities using OpenVAS.
- **Patch Management:** Ensures the system is up-to-date with the latest security patches.
- **Reporting:** Generates detailed PDF reports on system vulnerabilities and scan results.

## Project Structure

\`\`\`
securesystem/
├── alert_system.py
├── audit_log.py
├── behavioral_analysis.py
├── communication_encryption.py
├── data_encryption.py
├── ids.py
├── mfa.py
├── patch_management.py
├── report_generator.py
├── rbac.py
├── vulnerability_scanner.py
└── main.py
\`\`\`

## Installation

1. **Clone the repository:**
   \`\`\`bash
   git clone https://github.com/yourusername/securesystem.git
   cd securesystem
   \`\`\`

2. **Install the required dependencies:**
   \`\`\`bash
   pip install -r requirements.txt
   \`\`\`

   Ensure you have the necessary libraries installed:
   - Flask
   - Flask-Principal
   - scikit-learn
   - pyotp
   - pycryptodome
   - smtplib
   - OpenVAS (and its Python API wrapper)
   - ReportLab
   - Snort (installation instructions can be found on the [Snort website](https://www.snort.org/downloads))

## Configuration

1. **Alert System:**
   - Update SMTP server details, sender email, and sender password in \`alert_system.py\`.

2. **Behavioral Analysis:**
   - Prepare training data representing normal system behavior for initializing the Isolation Forest model in \`behavioral_analysis.py\`.

3. **Communication Encryption:**
   - Place SSL certificate and key files in the project directory and update paths in \`communication_encryption.py\`.

4. **Data Encryption:**
   - Update the encryption key in \`data_encryption.py\`.

5. **IDS:**
   - Ensure Snort is installed and the configuration file path is set correctly in \`ids.py\`.

6. **Multi-Factor Authentication (MFA):**
   - Generate a secret key for TOTP in \`mfa.py\`.

7. **RBAC:**
   - Define user roles and permissions in \`rbac.py\`.

8. **Vulnerability Scanner:**
   - Update OpenVAS server credentials in \`vulnerability_scanner.py\`.

## Usage

Run the \`main.py\` script to start the SecureSystem application:

\`\`\`bash
python main.py
\`\`\`

This script initializes all components and demonstrates their usage, including:
- Starting the IDS
- Detecting anomalies
- Sending alerts
- Encrypting and decrypting data
- Logging access events
- Checking for and applying system updates
- Performing vulnerability scans
- Generating reports
- Running the RBAC Flask application
